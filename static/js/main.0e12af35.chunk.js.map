{"version":3,"sources":["serviceWorker.js","utils/formatPrice.js","reducer/CartReducer.js","context/CartContext.js","reducer/ProductsReducer.js","context/ProductsContext.js","config.js","components/List.js","components/Accordion.js","components/CartItem.js","components/Cart.js","components/App.js","index.js"],"names":["Boolean","window","location","hostname","match","formatPrice","price","toString","toLocaleString","minimumFractionDigits","maximumFractionDigits","toFixed","sumItems","cartItems","localStorage","setItem","JSON","stringify","length","setToStorage","itemCount","reduce","total","product","quantity","C","CartReducer","state","action","type","find","item","id","payload","push","group","filter","findIndex","CartContext","createContext","storage","getItem","parse","initialState","CartContextProvider","children","useReducer","dispatch","contextValues","removeProduct","addProduct","increase","decrease","updateProductQuantity","Provider","value","ProductsReducer","loading","products","rate","priceStatus","errorMessage","error","ProductsContext","randomRate","Math","floor","random","ProductsContextProvider","getProductsData","responseProducts","fetch","then","response","json","Object","keys","Success","forEach","groupId","productId","good","hasOwnProperty","Value","Goods","T","G","P","tempRandomRate","Error","useEffect","intervalId","setInterval","clearInterval","List","useContext","isInCart","html","entries","sort","a","b","map","array","inStock","key","className","N","isMaxQuantity","onClick","Accordion","props","useState","isActive","setIsActive","title","CartItem","inputEl","useRef","decreaseButtonDisabled","setDecreaseButtonDisabled","increaseButtonDisabled","setIncreaseButtonDisabled","handleClick","current","min","max","bind","ref","onChange","event","target","Number","Cart","App","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.0e12af35.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/**\r\n * format prices\r\n * @param {String|Number} price\r\n * @param {Boolean} toString\r\n * @returns {string}\r\n */\r\nexport default function formatPrice(price, toString = true) {\r\n\treturn toString ? price.toLocaleString('ru-RU', {\r\n\t\tminimumFractionDigits: 2,\r\n\t\tmaximumFractionDigits: 2\r\n\t}) : price.toFixed(2) * 1;\r\n}\r\n","/**\r\n * Set cart items to localstorage\r\n * @param {Array} cartItems\r\n */\r\nconst setToStorage = cartItems => {\r\n\tlocalStorage.setItem('cart', JSON.stringify(cartItems.length > 0 ? cartItems : []));\r\n};\r\n\r\n/**\r\n * Sum total items counts and prices\r\n * @param {Array} cartItems\r\n * @returns {{total: string, itemCount: number}}\r\n */\r\nexport const sumItems = cartItems => {\r\n\tsetToStorage(cartItems);\r\n\tlet itemCount = cartItems.reduce((total, product) => total + product.quantity, 0);\r\n\tlet total = cartItems.reduce((total, product) => total + product.C * product.quantity, 0).toFixed(2);\r\n\treturn {total, itemCount};\r\n};\r\n\r\nexport const CartReducer = (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"ADD_ITEM\":\r\n\t\t\tif (!state.cartItems.find(item => item.id === action.payload.id)) {\r\n\t\t\t\tstate.cartItems.push({\r\n\t\t\t\t\t...action.payload,\r\n\t\t\t\t\tgroup: action.group,\r\n\t\t\t\t\tquantity: 1\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...sumItems(state.cartItems),\r\n\t\t\t\tcartItems: [...state.cartItems]\r\n\t\t\t};\r\n\t\tcase \"REMOVE_ITEM\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...sumItems(state.cartItems.filter(item => item.id !== action.payload.id)),\r\n\t\t\t\tcartItems: [...state.cartItems.filter(item => item.id !== action.payload.id)]\r\n\t\t\t};\r\n\t\tcase \"INCREASE\":\r\n\t\t\tstate.cartItems[state.cartItems.findIndex(item => item.id === action.payload.id)].quantity++;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...sumItems(state.cartItems),\r\n\t\t\t\tcartItems: [...state.cartItems]\r\n\t\t\t};\r\n\t\tcase \"DECREASE\":\r\n\t\t\tstate.cartItems[state.cartItems.findIndex(item => item.id === action.payload.id)].quantity--;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...sumItems(state.cartItems),\r\n\t\t\t\tcartItems: [...state.cartItems]\r\n\t\t\t};\r\n\t\tcase 'UPDATE_ITEM':\r\n\t\t\tstate.cartItems[state.cartItems.findIndex(item => item.id === action.payload.id)].quantity = action.quantity;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...sumItems(state.cartItems),\r\n\t\t\t\tcartItems: [...state.cartItems]\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import React, {createContext, useReducer} from 'react';\r\nimport {CartReducer, sumItems} from '../reducer/CartReducer';\r\n\r\nexport const CartContext = createContext([]);\r\n\r\nconst storage = localStorage.getItem('cart') ? JSON.parse(localStorage.getItem('cart')) : [];\r\nconst initialState = {\r\n\tcartItems: storage,\r\n\t...sumItems(storage)\r\n};\r\n\r\nconst CartContextProvider = ({children}) => {\r\n\tconst [state, dispatch] = useReducer(CartReducer, initialState);\r\n\r\n\tconst increase = payload => {\r\n\t\tdispatch({type: 'INCREASE', payload})\r\n\t};\r\n\r\n\tconst decrease = payload => {\r\n\t\tdispatch({type: 'DECREASE', payload})\r\n\t};\r\n\r\n\tconst addProduct = (payload, group) => {\r\n\t\tdispatch({type: 'ADD_ITEM', payload, group})\r\n\t};\r\n\r\n\tconst removeProduct = payload => {\r\n\t\tdispatch({type: 'REMOVE_ITEM', payload})\r\n\t};\r\n\r\n\tconst updateProductQuantity = (payload, quantity) => {\r\n\t\tdispatch({type: 'UPDATE_ITEM', payload, quantity})\r\n\t};\r\n\r\n\tconst contextValues = {\r\n\t\tremoveProduct,\r\n\t\taddProduct,\r\n\t\tincrease,\r\n\t\tdecrease,\r\n\t\tupdateProductQuantity,\r\n\t\t...state\r\n\t};\r\n\r\n\treturn (\r\n\t\t<CartContext.Provider value={contextValues}>\r\n\t\t\t{children}\r\n\t\t</CartContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default CartContextProvider;\r\n","export const ProductsReducer = (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"PRODUCTS_SUCCESS\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true,\r\n\t\t\t\tproducts: action.payload.products,\r\n\t\t\t\trate: action.payload.rate,\r\n\t\t\t\tpriceStatus: action.payload.priceStatus,\r\n\t\t\t};\r\n\t\tcase \"PRODUCTS_FAILURE\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\terrorMessage: action.error\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import React, {createContext, useEffect, useReducer} from 'react';\r\nimport {ProductsReducer} from \"../reducer/ProductsReducer\";\r\nimport {timer} from \"../config\";\r\n\r\nexport const ProductsContext = createContext({});\r\n\r\n// Random currency rate\r\nconst randomRate = {\r\n\tget value() {\r\n\t\treturn Math.floor(Math.random() * (80 - 20) + 20);\r\n\t}\r\n};\r\n\r\nconst initialState = {\r\n\tloading: false,\r\n\tproducts: [],\r\n\trate: 1,\r\n\tpriceStatus: '',\r\n\terrorMessage: null\r\n};\r\n\r\nconst ProductsContextProvider = ({children}) => {\r\n\tconst [state, dispatch] = useReducer(ProductsReducer, initialState);\r\n\tlet {loading, products, rate, priceStatus, errorMessage} = state;\r\n\r\n\t// Get products data (price, count)\r\n\tfunction getProductsData(responseProducts = null) {\r\n\t\tfetch(process.env.PUBLIC_URL + '/api/data.json')\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(response => {\r\n\t\t\t\tif (!Object.keys(products).length && responseProducts) {\r\n\t\t\t\t\tproducts = responseProducts;\r\n\t\t\t\t}\r\n\t\t\t\tif (response.Success) {\r\n\t\t\t\t\tObject.keys(products).forEach((groupId) => {\r\n\t\t\t\t\t\tObject.keys(products[groupId]['B']).forEach((productId) => {\r\n\t\t\t\t\t\t\tproducts[groupId]['B'][productId]['id'] = productId;\r\n\t\t\t\t\t\t\tlet good = response.hasOwnProperty('Value') && response.Value.hasOwnProperty('Goods') &&\r\n\t\t\t\t\t\t\t\tresponse.Value.Goods.find(good => +good.T === +productId && +good.G === +groupId);\r\n\t\t\t\t\t\t\tif (good) {\r\n\t\t\t\t\t\t\t\tgood.P && (products[groupId]['B'][productId]['P'] = good.P);\r\n\r\n\t\t\t\t\t\t\t\tif (good.C) {\r\n\t\t\t\t\t\t\t\t\tproducts[groupId]['B'][productId]['C'] = good.C;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tdelete products[groupId]['B'][productId]['C'];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t\tlet tempRandomRate = randomRate.value;\r\n\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\ttype: \"PRODUCTS_SUCCESS\",\r\n\t\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\t\tproducts: products,\r\n\t\t\t\t\t\t\trate: tempRandomRate,\r\n\t\t\t\t\t\t\tpriceStatus: (() => {\r\n\t\t\t\t\t\t\t\tif (rate !== 1 && rate < tempRandomRate) {\r\n\t\t\t\t\t\t\t\t\treturn 'less';\r\n\t\t\t\t\t\t\t\t} else if (rate !== 1 && rate > tempRandomRate) {\r\n\t\t\t\t\t\t\t\t\treturn 'large';\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (response.Error) {\r\n\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\ttype: \"PRODUCTS_FAILURE\",\r\n\t\t\t\t\t\terror: response.Error\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}\r\n\r\n\t// Get products list\r\n\tuseEffect(() => {\r\n\t\tfetch(process.env.PUBLIC_URL + '/api/names.json')\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(response => getProductsData(response));\r\n\t}, []);\r\n\r\n\t// Updating product data\r\n\tuseEffect(() => {\r\n\t\tconst intervalId = setInterval(() => {\r\n\t\t\tgetProductsData();\r\n\t\t}, timer);\r\n\r\n\t\treturn () => clearInterval(intervalId);\r\n\t});\r\n\r\n\treturn (\r\n\t\t<ProductsContext.Provider value={{loading, products, rate, priceStatus, errorMessage}}>\r\n\t\t\t{children}\r\n\t\t</ProductsContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default ProductsContextProvider;\r\n","export const timer = 15000;\r\nexport const siteCyrrency = 'руб.';\r\nexport const siteAmount = 'шт.';\r\n","import React, {useContext} from \"react\";\r\nimport formatPrice from \"../utils/formatPrice\";\r\nimport {CartContext} from '../context/CartContext';\r\nimport {ProductsContext} from \"../context/ProductsContext\";\r\nimport {siteAmount, siteCyrrency} from \"../config\";\r\nimport \"../assets/scss/Product.scss\";\r\n\r\nconst List = ({products, group}) => {\r\n\tconst {addProduct, cartItems, increase} = useContext(CartContext);\r\n\tconst {rate, priceStatus} = useContext(ProductsContext);\r\n\r\n\t/**\r\n\t * Checking product in the cart\r\n\t * @param {Object} product\r\n\t * @returns {boolean}\r\n\t */\r\n\tconst isInCart = product => {\r\n\t\treturn !!cartItems.find(item => item.id === product.id);\r\n\t};\r\n\r\n\t/**\r\n\t * Checking max quantity product\r\n\t * @param {Object} product\r\n\t * @param {String|Number} quantity\r\n\t * @returns {boolean}\r\n\t */\r\n\tconst isMaxQuantity = (product, quantity) => {\r\n\t\tlet item = cartItems.find(item => item.id === product.id);\r\n\t\tif (item) {\r\n\t\t\treturn +item.quantity < +quantity;\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\r\n\t// Sorting by stock balance\r\n\tproducts = Object.entries(products).sort((a, b) => {\r\n\t\treturn ('P' in b[1]) - ('P' in a[1]);\r\n\t});\r\n\r\n\tlet html = products.map((array) => {\r\n\t\tlet product = array[1];\r\n\t\tlet inStock = !!product.P;\r\n\r\n\t\treturn (\r\n\t\t\t<div key={array[0]} className={'product' + (!inStock ? ' product--empty' : '')}>\r\n\t\t\t\t<div className=\"product__col\">\r\n\t\t\t\t\t<div className=\"product__info\">\r\n\t\t\t\t\t\t<div className=\"product__title\">{product.N} ({inStock ? product.P : 'Нет в наличии'})</div>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tisInCart(product) && product.P && isMaxQuantity(product, product.P) &&\r\n\t\t\t\t\t\t\t<button onClick={() => increase(product)} className=\"btn\">Добавить еще</button>\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t!isInCart(product) && product.P &&\r\n\t\t\t\t\t\t\t<button onClick={() => addProduct(product, group)}\r\n\t\t\t\t\t\t\t\t\tclassName=\"btn\">Добавить в корзину</button>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"product__col\">\r\n\t\t\t\t{\r\n\t\t\t\t\tproduct.C\r\n\t\t\t\t\t\t? <div className=\"product__price\">\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tclassName={'price ' + priceStatus}>{formatPrice(product.C * rate)} {siteCyrrency} / {siteAmount}</div>\r\n\t\t\t\t\t\t\t<div className=\"price price--small\">{'$' + product.C}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t: null\r\n\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div>{html}</div>\r\n\t)\r\n};\r\n\r\nexport default List;\r\n","import React, {useState} from \"react\";\r\nimport \"../assets/scss/Accordion.scss\";\r\n\r\nfunction Accordion(props) {\r\n\tconst [isActive, setIsActive] = useState(true);\r\n\r\n\tfunction toggle() {\r\n\t\tsetIsActive(!isActive);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"accordion\">\r\n\t\t\t<div onClick={() => toggle()}\r\n\t\t\t\t className={'accordion__title' + (isActive ? ' is-toggle' : '')}>{props.title}</div>\r\n\t\t\t<div className={'accordion__content' + (isActive ? ' is-toggle' : '')}>{props.children}</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Accordion;\r\n","import React, {useContext, useEffect, useRef, useState} from \"react\";\r\nimport formatPrice from \"../utils/formatPrice\";\r\nimport {CartContext} from '../context/CartContext';\r\nimport {ProductsContext} from \"../context/ProductsContext\";\r\nimport \"../assets/scss/CartItem.scss\"\r\nimport {siteAmount, siteCyrrency} from \"../config\";\r\n\r\nconst CartItem = ({product}) => {\r\n\tconst {updateProductQuantity, removeProduct, decrease, increase} = useContext(CartContext);\r\n\tconst {rate, priceStatus} = useContext(ProductsContext);\r\n\tconst inputEl = useRef(null);\r\n\tconst [decreaseButtonDisabled, setDecreaseButtonDisabled] = useState(product.quantity <= 1);\r\n\tconst [increaseButtonDisabled, setIncreaseButtonDisabled] = useState(product.P <= product.quantity);\r\n\r\n\tfunction handleChange(product, event) {\r\n\t\tlet {value, min, max} = event.target;\r\n\t\tvalue = Math.max(Number(min), Math.min(Number(max), Number(value)));\r\n\r\n\t\tsetIncreaseButtonDisabled(false);\r\n\t\tsetDecreaseButtonDisabled(false);\r\n\t\tif (+value <= +min) {\r\n\t\t\tsetDecreaseButtonDisabled(true);\r\n\t\t}\r\n\t\tif (+value >= +max) {\r\n\t\t\tsetIncreaseButtonDisabled(true);\r\n\t\t}\r\n\t\tupdateProductQuantity(product, value);\r\n\t}\r\n\r\n\tfunction handleClick(product, type) {\r\n\t\tlet {value, min, max} = inputEl.current;\r\n\t\tswitch (type) {\r\n\t\t\tcase 'decrease':\r\n\t\t\t\tif (+value === +min) {\r\n\t\t\t\t\tsetDecreaseButtonDisabled(true);\r\n\t\t\t\t} else if (+value - 1 === +min) {\r\n\t\t\t\t\tdecrease(product);\r\n\t\t\t\t\tsetDecreaseButtonDisabled(true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdecrease(product);\r\n\t\t\t\t\tsetIncreaseButtonDisabled(false);\r\n\t\t\t\t\tsetDecreaseButtonDisabled(false);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'increase':\r\n\t\t\t\tif (+value === +max) {\r\n\t\t\t\t\tsetIncreaseButtonDisabled(true);\r\n\t\t\t\t} else if (+value + 1 === +max) {\r\n\t\t\t\t\tincrease(product);\r\n\t\t\t\t\tsetIncreaseButtonDisabled(true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tincrease(product);\r\n\t\t\t\t\tsetIncreaseButtonDisabled(false);\r\n\t\t\t\t\tsetDecreaseButtonDisabled(false);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (inputEl.current) {\r\n\t\t\tlet {value, min, max} = inputEl.current;\r\n\t\t\tsetIncreaseButtonDisabled(false);\r\n\t\t\tsetDecreaseButtonDisabled(false);\r\n\t\t\tif (+value <= +min) {\r\n\t\t\t\tsetDecreaseButtonDisabled(true);\r\n\t\t\t}\r\n\t\t\tif (+value >= +max) {\r\n\t\t\t\tsetIncreaseButtonDisabled(true);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className=\"cart\" key={product.id}>\r\n\t\t\t<div className=\"cart-details\">\r\n\t\t\t\t<div className=\"cart-cross\">\r\n\t\t\t\t\t<button onClick={() => removeProduct(product)} className=\"btn-icon\">&times;</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"cart-title\">{product.group ? product.group + '. ' : ''}{product.N}</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"cart-quantity\">\r\n\t\t\t\t<div className=\"cart-quantity__top\">\r\n\t\t\t\t\t<div className=\"quantities\">\r\n\t\t\t\t\t\t<div onClick={handleClick.bind(this, product, 'decrease')}\r\n\t\t\t\t\t\t\t className={'quantities__ctrl decrease' + (decreaseButtonDisabled ? ' disabled' : '')}>\r\n\t\t\t\t\t\t\t<span>−</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"quantities__input\">\r\n\t\t\t\t\t\t\t<input ref={inputEl} type=\"number\" value={product.quantity} min=\"1\" max={product.P}\r\n\t\t\t\t\t\t\t\t   onChange={handleChange.bind(this, product)}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div onClick={handleClick.bind(this, product, 'increase')}\r\n\t\t\t\t\t\t\t className={'quantities__ctrl increase' + (increaseButtonDisabled ? ' disabled' : '')}>\r\n\t\t\t\t\t\t\t<span>+</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<span className=\"amount\"> {siteAmount}</span>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"cart-quantity__bottom\">\r\n\t\t\t\t\t{product.quantity === product.P ? <span className=\"noty-msg\">Количество ограничено</span> : null}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\tproduct.C\r\n\t\t\t\t\t? <div className=\"cart-price\">\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName={'price ' + priceStatus}>{formatPrice(product.C * rate)} {siteCyrrency} / {siteAmount}</div>\r\n\t\t\t\t\t\t<div className=\"price price--small\">{'$' + product.C}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t: null\r\n\t\t\t}\r\n\t\t\t<div className=\"cart-removal\">\r\n\t\t\t\t<button onClick={() => removeProduct(product)} className=\"btn-link\">Удалить</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default CartItem;\r\n","import React, {useContext} from \"react\";\r\nimport formatPrice from \"../utils/formatPrice\";\r\nimport {CartContext} from '../context/CartContext';\r\nimport {ProductsContext} from \"../context/ProductsContext\";\r\nimport CartItem from \"./CartItem\";\r\nimport \"../assets/scss/Cart.scss\"\r\nimport {siteAmount, siteCyrrency} from \"../config\";\r\n\r\nconst Cart = () => {\r\n\tconst {cartItems, total, itemCount} = useContext(CartContext);\r\n\tconst {rate} = useContext(ProductsContext);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\t\tObject.keys(cartItems).length\r\n\t\t\t\t\t? <div className=\"shopping-cart\">\r\n\t\t\t\t\t\t<div className=\"shopping-cart__title\">Корзина</div>\r\n\t\t\t\t\t\t<div className=\"shopping-cart__head\">\r\n\t\t\t\t\t\t\t<div className=\"cart-details\">Найменование товара и описание</div>\r\n\t\t\t\t\t\t\t<div className=\"cart-quantity\">Количество</div>\r\n\t\t\t\t\t\t\t<div className=\"cart-price\">Цена</div>\r\n\t\t\t\t\t\t\t<div className=\"cart-removal\">&nbsp;</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"shopping-cart__list\">\r\n\t\t\t\t\t\t\t{Object.keys(cartItems).map((productId) => <CartItem key={productId}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t product={cartItems[productId]}/>)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"totals\">\r\n\t\t\t\t\t\t\t<div className=\"totals__item\">\r\n\t\t\t\t\t\t\t\t<div className=\"totals__title\">Всего товаров:</div>\r\n\t\t\t\t\t\t\t\t<div className=\"totals__value\">{itemCount} {siteAmount}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"totals__item totals__item--bold\">\r\n\t\t\t\t\t\t\t\t<div className=\"totals__title\">Всего к оплате:</div>\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tclassName=\"totals__value totals__value--orange\">{formatPrice(total * rate)} {siteCyrrency}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t: null\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default Cart;\r\n","import React, {useContext} from \"react\";\r\nimport List from \"./List\";\r\nimport {ProductsContext} from '../context/ProductsContext';\r\nimport Accordion from \"./Accordion\";\r\nimport Cart from \"./Cart\";\r\nimport {siteCyrrency} from \"../config\";\r\n\r\nconst App = () => {\r\n\tconst {loading, products, errorMessage, rate} = useContext(ProductsContext);\r\n\r\n\treturn (\r\n\t\t<div className=\"wrapper\">\r\n\t\t\t<div className=\"main\">\r\n\t\t\t\t<section className=\"container\">\r\n\t\t\t\t\t<h2>Курс: $1 = {rate} {siteCyrrency}</h2>\r\n\t\t\t\t\t<Cart/>\r\n\r\n\t\t\t\t\t<h2>Список товаров</h2>\r\n\t\t\t\t\t<div className=\"product-list\">\r\n\t\t\t\t\t\t{!loading && !errorMessage ? (\r\n\t\t\t\t\t\t\t<span>loading... </span>\r\n\t\t\t\t\t\t) : errorMessage ? (\r\n\t\t\t\t\t\t\t<div className=\"errorMessage\">{errorMessage}</div>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\tObject.keys(products).map((groupId) => (\r\n\t\t\t\t\t\t\t\t<Accordion key={groupId} title={products[groupId]['G']}>\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tObject.keys(products[groupId]['B']).length\r\n\t\t\t\t\t\t\t\t\t\t\t? <List products={products[groupId]['B']} group={products[groupId]['G']}/>\r\n\t\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</Accordion>\r\n\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</section>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\nimport App from './components/App';\nimport ProductsContextProvider from './context/ProductsContext';\nimport CartContextProvider from './context/CartContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ProductsContextProvider>\n      <CartContextProvider>\n          <App />\n      </CartContextProvider>\n    </ProductsContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}